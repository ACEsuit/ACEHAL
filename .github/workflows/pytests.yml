# This is testing the python versions *other than* the
#   one in the QUIP Docker, which is 3.7.10 at the time
#   of writing this. Coverage is disabled.

name: Python Package and tests

# on all push actions AND can be triggered manually as well
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  install-and-run-pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]
      max-parallel: 5
    env:
      coverage-on-version: 3.8
      use-mpi: True

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: julia-actions/setup-julia@v1
        with:
          version: "1.8"

      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH

      - name: Install pip from Conda
        run: conda install pip

      - name: Install julia packages
        run: |
          export JULIA_PROJECT=${PWD}/tests/julia_assets
          echo "JULIA_PROJECT ${JULIA_PROJECT}"
          ls $JULIA_PROJECT
          julia -e 'using Pkg; Pkg.Registry.add("General"); Pkg.Registry.add(Pkg.RegistrySpec(url = "https://github.com/ACEsuit/ACEregistry"))'
          julia -e 'using Pkg; Pkg.instantiate()'
          echo "Project.toml content"
          cat $JULIA_PROJECT/Project.toml

      - name: Install dependencies from pip
        run: pip install wheel setuptools flake8 pytest pytest-cov scikit-learn

      - name: Install ACEHAL, really just for dependencies
        run: pip install .

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 ACEHAL/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 ACEHAL/ --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

      - name: Test with pytest - plain
        if: env.coverage-on-version != matrix.python-version
        run: |
          pytest

      - name: Test with pytest - coverage
        if: env.coverage-on-version == matrix.python-version
        run: |
          pytest -v --cov=ACEHAL --cov-report term --cov-report html --cov-config=tests/.coveragerc --cov-report term-missing --cov-report term:skip-covered

      - name: 'Upload Coverage Data'
        uses: actions/upload-artifact@v2
        if: env.coverage-on-version == matrix.python-version
        with:
          name: coverage-html-${{ matrix.python-version }}
          path: coverage-html/
          retention-days: 7
